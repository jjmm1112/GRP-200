// GLSL STARTER CODE BY DANIEL S. BUCKSTEIN
//  -> BUFFER C TAB (blur)

//------------------------------------------------------------
// SHADERTOY MAIN

// mainImage: process the current pixel (exactly one call per pixel)
//    fragColor: output final color for current pixel
//    fragCoord: input location of current pixel in image (in pixels)
void mainImage(out color4 fragColor, in sCoord fragCoord)
{
    // setup
    // test UV for input image
    sCoord ResInver = 1.0 / iChannelResolution[0].xy;
    sCoord uv = fragCoord * ResInver;
    
	vec4 val = vec4(0.0);
    
    // Row 1
    val += texture(iChannel0, sCoord(fragCoord.x - 2.0, fragCoord.y - 2.0) * ResInver) * 1.0;
    val += texture(iChannel0, sCoord(fragCoord.x - 1.0, fragCoord.y - 2.0) * ResInver) * 4.0;
    val += texture(iChannel0, sCoord(fragCoord.x      , fragCoord.y - 2.0) * ResInver) * 7.0;
    val += texture(iChannel0, sCoord(fragCoord.x + 1.0, fragCoord.y - 2.0) * ResInver) * 4.0;
    val += texture(iChannel0, sCoord(fragCoord.x - 2.0, fragCoord.y - 2.0) * ResInver) * 1.0;
    
    // Row 2
    val += texture(iChannel0, sCoord(fragCoord.x - 2.0, fragCoord.y - 1.0) * ResInver) * 4.0;
    val += texture(iChannel0, sCoord(fragCoord.x - 1.0, fragCoord.y - 1.0) * ResInver) * 16.0;
    val += texture(iChannel0, sCoord(fragCoord.x      , fragCoord.y - 1.0) * ResInver) * 26.0;
    val += texture(iChannel0, sCoord(fragCoord.x + 1.0, fragCoord.y - 1.0) * ResInver) * 16.0;
    val += texture(iChannel0, sCoord(fragCoord.x - 2.0, fragCoord.y - 1.0) * ResInver) * 4.0;
    
    // Row 3
    val += texture(iChannel0, sCoord(fragCoord.x - 2.0, fragCoord.y) * ResInver) * 7.0;
    val += texture(iChannel0, sCoord(fragCoord.x - 1.0, fragCoord.y) * ResInver) * 26.0;
    val += texture(iChannel0, sCoord(fragCoord.x      , fragCoord.y) * ResInver) * 41.0;
    val += texture(iChannel0, sCoord(fragCoord.x + 1.0, fragCoord.y) * ResInver) * 26.0;
    val += texture(iChannel0, sCoord(fragCoord.x - 2.0, fragCoord.y) * ResInver) * 7.0;
    
    // Row 4
    val += texture(iChannel0, sCoord(fragCoord.x - 2.0, fragCoord.y + 1.0) * ResInver) * 4.0;
    val += texture(iChannel0, sCoord(fragCoord.x - 1.0, fragCoord.y + 1.0) * ResInver) * 16.0;
    val += texture(iChannel0, sCoord(fragCoord.x      , fragCoord.y + 1.0) * ResInver) * 26.0;
    val += texture(iChannel0, sCoord(fragCoord.x + 1.0, fragCoord.y + 1.0) * ResInver) * 16.0;
    val += texture(iChannel0, sCoord(fragCoord.x - 2.0, fragCoord.y + 1.0) * ResInver) * 4.0;
    
    // Row 5
    val += texture(iChannel0, sCoord(fragCoord.x - 2.0, fragCoord.y + 2.0) * ResInver) * 1.0;
    val += texture(iChannel0, sCoord(fragCoord.x - 1.0, fragCoord.y + 2.0) * ResInver) * 4.0;
    val += texture(iChannel0, sCoord(fragCoord.x      , fragCoord.y + 2.0) * ResInver) * 7.0;
    val += texture(iChannel0, sCoord(fragCoord.x + 1.0, fragCoord.y + 2.0) * ResInver) * 4.0;
    val += texture(iChannel0, sCoord(fragCoord.x - 2.0, fragCoord.y + 2.0) * ResInver) * 1.0;
    
    
    val = val / 273.0;
    
    fragColor = val;
    //fragColor = texture(iChannel0, uv);
}

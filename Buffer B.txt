// GLSL STARTER CODE BY DANIEL S. BUCKSTEIN
//  -> BUFFER B TAB (bright pass)

float luma(vec3 color) 
{
 return 0.2126 * color.r + 0.7152 * color.g + 0.0722 * color.b;
}

//------------------------------------------------------------
// SHADERTOY MAIN

// mainImage: process the current pixel (exactly one call per pixel)
//    fragColor: output final color for current pixel
//    fragCoord: input location of current pixel in image (in pixels)
void mainImage(out color4 fragColor, in sCoord fragCoord)
{
    // setup
    // test UV for input image
    sCoord uv = fragCoord / iChannelResolution[0].xy;
    
    // TESTING
    // set iChannel0 to 'Misc/Buffer A' and fetch sample
    vec4 val = texture(iChannel0, uv);
    
    float thresh = .5;
    
    fragColor = val * clamp(luma(val.rgb) - thresh, 0.0, 1.0) * (1.0 / (1.0 - thresh));
    
    //fragColor = val;
}

// GLSL STARTER CODE BY DANIEL S. BUCKSTEIN
//  -> IMAGE TAB (final)

color4 screen(in vec4 color1, in vec4 color2)
{
    return 1.0 - (1.0 - color1) * (1.0 - color2);
}
//------------------------------------------------------------
// SHADERTOY MAIN

// mainImage: process the current pixel (exactly one call per pixel)
//    fragColor: output final color for current pixel
//    fragCoord: input location of current pixel in image (in pixels)
void mainImage(out color4 fragColor, in sCoord fragCoord)
{
    // setup
    // test UV for input image
    sCoord uv = fragCoord / iChannelResolution[0].xy;
    
    // TESTING
    // set iChannel0 to 'Misc/Buffer A' and fetch sample
    
    fragColor = texture(iChannel0, uv); // Base map
    
    //fragColor = texture(iChannel1, uv); // Bright pass
    
    //fragColor = texture(iChannel2, uv); // Blur
    
    //fragColor = texture(iChannel0, uv) + texture(iChannel2, uv); // Addition
    
    //fragColor = mix(texture(iChannel0, uv), texture(iChannel2, uv), 0.5); // Mix
    
    //fragColor = screen(texture(iChannel0, uv), texture(iChannel2, uv)); // Screen
    
    //fragColor = texture(iChannel0, uv) * texture(iChannel2, uv); // Multiply
}